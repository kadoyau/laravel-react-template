# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2
jobs:
  build:
    docker:
      - image: circleci/php:7.3-apache-node-browsers # ...with this image as the primary container; this is where all `steps` will run
        environment:
          REVIEWDOG_VERSION: 0.9.11
      - image: circleci/postgres:11.6
        environment:
          POSTGRES_DB: default
          POSTGRES_USER: default
          POSTGRES_PASSWORD: secret
    working_directory: ~/laravel # directory where steps will run

    steps:
      - checkout
      - run:
          name: Install and enable pdo_pgsql php extension
          command: |
            sudo apt-get update && sudo apt-get install libpq-dev
            sudo docker-php-ext-install bcmath json pdo_pgsql && sudo docker-php-ext-enable pdo_pgsql
      - run: sudo composer self-update

      # Download and cache dependencies
      - restore_cache:
          keys:
            # "composer.lock" can be used if it is committed to the repo
            - v1-dependencies-{{ checksum "composer.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: composer install -n --prefer-dist

      - save_cache:
          key: v1-dependencies-{{ checksum "composer.json" }}
          paths:
            - ./vendor
      - restore_cache:
          keys:
            - node-v1-{{ checksum "package.json" }}
            - node-v1-
      - run: yarn install
      - save_cache:
          key: node-v1-{{ checksum "package.json" }}
          paths:
            - node_modules
      - run:
          name: Install and build CRA
          command: | # TODO: cache
            yarn install
            yarn run build:production
          working_directory: ~/laravel/front
      - run: cp .env.ci .env.testing
      - run: php artisan key:generate --env=testing
      - run: php artisan migrate --env=testing --force

      - run:
          name: Run tests
          command: |
            ./vendor/bin/phpunit --log-junit /tmp/test-results/phpunit/logfile.xml
      - store_test_results:
          path: /tmp/test-results
